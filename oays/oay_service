#!/bin/sh -x 
### BEGIN INIT INFO
# Provides:          oay_service
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Manages implementation of Ollie at Your Service 
### END INIT INFO

RUNAS=ollie_at_your_service

PIDFILE=/var/run/ollie.pid
LOGFILE=/var/log/ollie.log

start() {
  if [ -f /var/run/$PIDNAME ] && kill -0 $(cat /var/run/$PIDNAME); then
    echo 'Service already running' >&2
    return 1
  fi
  echo 'Starting service.' >&2
  #SCRIPT="python /opt/ollie/ollie_at_your_service.py"
  #$SCRIPT > $LOGFILE &
  /opt/ollie/ollie_at_your_service.py > $LOGFILE &
  ps -ef | grep "[o]llie_at_your_service.py" | awk '{print $2}' > $PIDFILE
  echo 'Service started' >&2
  #starting netwatcher...
  /opt/ollie/chknet &
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo 'Service not running' >&2
    return 1
  fi
  echo 'Stopping service.' >&2
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  pkill chknet
  echo 'Services stopped' >&2
}

uninstall() {
  echo -n "Are you really sure you want to uninstall this service? That cannot be undone. [yes|No] "
  local SURE
  read SURE
  if [ "$SURE" = "yes" ]; then
    stop
    rm -f "$PIDFILE"
    echo "Notice: log file is not be removed: '$LOGFILE'" >&2
    update-rc.d -f <NAME> remove
    rm -fv "$0"
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  uninstall)
    uninstall
    ;;
  retart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|uninstall}"
esac
